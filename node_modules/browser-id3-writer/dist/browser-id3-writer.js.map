{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap a8776abc8d4ba7e10557","webpack:///./src/browser-id3-writer.js","webpack:///./src/encoder.js","webpack:///./src/signatures.js"],"names":[],"mappings":"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","file":"browser-id3-writer.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ID3Writer\"] = factory();\n\telse\n\t\troot[\"ID3Writer\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a8776abc8d4ba7e10557\n **/","const encoder = require('./encoder');\r\nconst signatures = require('./signatures');\r\n\r\nfunction uint32ToUint8Array(uint32) {\r\n    const uint8array = [];\r\n    const eightBitMask = (1 << 8) - 1;\r\n\r\n    for (let i = 24; i >= 0; i -= 8) {\r\n        uint8array.push((uint32 >>> i) & eightBitMask);\r\n    }\r\n    return uint8array;\r\n}\r\n\r\nfunction uint28ToUint7Array(uint28) {\r\n    const uint7array = [];\r\n    const sevenBitMask = (1 << 7) - 1;\r\n\r\n    for (let i = 21; i >= 0; i -= 7) {\r\n        uint7array.push((uint28 >>> i) & sevenBitMask);\r\n    }\r\n    return uint7array;\r\n}\r\n\r\nfunction uint7ArrayToUint28(uint7Array) {\r\n    let uint28 = 0;\r\n\r\n    for (let i = 0, pow = 21; pow >= 0; pow -= 7, i++) {\r\n        uint28 += uint7Array[i] << pow;\r\n    }\r\n    return uint28;\r\n}\r\n\r\nfunction artistsToStr(artists) {\r\n    return artists.join('/') || 'Unknown Artist';\r\n}\r\n\r\nfunction genresToStr(genres) {\r\n    // this delimiter works fine in Windows Explorer but nothing said about it in the spec\r\n    return genres.join(';');\r\n}\r\n\r\nfunction getTotalFrameSize(frames) {\r\n    let size = 0;\r\n\r\n    frames.forEach((frame) => {\r\n        size += frame.size;\r\n    });\r\n    return size;\r\n}\r\n\r\nfunction getNumericFrameSize(frameSize) {\r\n    const headerSize = 10;\r\n    const encodingSize = 1;\r\n\r\n    return headerSize + encodingSize + frameSize;\r\n}\r\n\r\nfunction getStringFrameSize(frameSize) {\r\n    const headerSize = 10;\r\n    const encodingSize = 1;\r\n    const bomSize = 2;\r\n    const frameUtf16Size = frameSize * 2;\r\n\r\n    return headerSize + encodingSize + bomSize + frameUtf16Size;\r\n}\r\n\r\nfunction getLyricsFrameSize(lyricsSize) {\r\n    const headerSize = 10;\r\n    const encodingSize = 1;\r\n    const languageSize = 3;\r\n    const contentDescriptorSize = 2;\r\n    const bomSize = 2;\r\n    const lyricsUtf16Size = lyricsSize * 2;\r\n\r\n    return headerSize + encodingSize + languageSize + bomSize + contentDescriptorSize + bomSize + lyricsUtf16Size;\r\n}\r\n\r\nfunction getPictureFrameSize(frameSize, mimeTypeSize) {\r\n    const headerSize = 10;\r\n    const encodingSize = 1;\r\n    const nullSize = 1;\r\n    const pictureTypeSize = 1;\r\n\r\n    return headerSize + encodingSize + mimeTypeSize + nullSize + pictureTypeSize + nullSize + frameSize;\r\n}\r\n\r\nclass Writer {\r\n\r\n    _setIntegerFrame(name, value) {\r\n        const integer = parseInt(value, 10);\r\n\r\n        this.frames.push({\r\n            name,\r\n            value: integer,\r\n            size: getNumericFrameSize(integer.toString().length)\r\n        });\r\n    }\r\n\r\n    _setStringFrame(name, value) {\r\n        const stringValue = value.toString();\r\n\r\n        this.frames.push({\r\n            name,\r\n            value: stringValue,\r\n            size: getStringFrameSize(stringValue.length)\r\n        });\r\n    }\r\n\r\n    _setPictureFrame(name, buffer) {\r\n        const mimeType = signatures.getMimeType(new Uint8Array(buffer), 0, 12);\r\n\r\n        if (!mimeType) {\r\n            throw new Error('Unknown picture MIME type');\r\n        }\r\n        this.frames.push({\r\n            name,\r\n            value: buffer,\r\n            mimeType,\r\n            size: getPictureFrameSize(buffer.byteLength, mimeType.length)\r\n        });\r\n    }\r\n\r\n    _setLyricsFrame(name, lyrics) {\r\n        const stringValue = lyrics.toString();\r\n\r\n        this.frames.push({\r\n            name,\r\n            value: stringValue,\r\n            size: getLyricsFrameSize(stringValue.length)\r\n        });\r\n    }\r\n\r\n    constructor(buffer) {\r\n        if (!buffer || typeof buffer !== 'object' || !('byteLength' in buffer)) {\r\n            throw new Error('First argument should be an instance of ArrayBuffer or Buffer');\r\n        }\r\n\r\n        this.arrayBuffer = buffer;\r\n        this.padding = 4096;\r\n        this.frames = [];\r\n        this.url = '';\r\n    }\r\n\r\n\r\n    setFrame(frameName, frameValue) {\r\n        switch (frameName) {\r\n            case 'TPE1': // song artists\r\n            case 'TCOM': // song composers\r\n            {\r\n                if (!Array.isArray(frameValue)) {\r\n                    throw new Error(`${frameName} frame value should be an array of strings`);\r\n                }\r\n                const artists = frameValue.map((artist) => artist.toString());\r\n                const artistsStr = artistsToStr(artists);\r\n\r\n                this._setStringFrame(frameName, artistsStr);\r\n                break;\r\n            }\r\n            case 'TCON': // song genre\r\n            {\r\n                if (!Array.isArray(frameValue)) {\r\n                    throw new Error(`${frameName} frame value should be an array of strings`);\r\n                }\r\n                const frames = frameValue.map((frame) => frame.toString());\r\n                const genresStr = genresToStr(frames);\r\n\r\n                this._setStringFrame(frameName, genresStr);\r\n                break;\r\n            }\r\n            case 'TIT2': // song title\r\n            case 'TALB': // album title\r\n            case 'TPE2': // album artist // spec doesn't say anything about separator, so it is a string, not array\r\n            case 'TRCK': // song number in album: 5 or 5/10\r\n            case 'TPOS': // album disc number: 1 or 1/3\r\n            case 'TPUB': // label name\r\n            {\r\n                this._setStringFrame(frameName, frameValue);\r\n                break;\r\n            }\r\n            case 'TLEN': // song duration\r\n            case 'TYER': // album release year\r\n            {\r\n                this._setIntegerFrame(frameName, frameValue);\r\n                break;\r\n            }\r\n            case 'USLT': // unsychronised lyrics\r\n            {\r\n                this._setLyricsFrame(frameName, frameValue);\r\n                break;\r\n            }\r\n            case 'APIC': // song cover\r\n            {\r\n                if (typeof frameValue !== 'object' || !('byteLength' in frameValue)) {\r\n                    throw new Error('APIC frame value should be an instance of ArrayBuffer or Buffer');\r\n                }\r\n                this._setPictureFrame(frameName, frameValue);\r\n                break;\r\n            }\r\n            default:\r\n            {\r\n                throw new Error(`Unsupported frame ${frameName}`);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    removeTag() {\r\n        const headerLength = 10;\r\n        const bufferLength = this.arrayBuffer.byteLength;\r\n\r\n        if (bufferLength < headerLength) {\r\n            return;\r\n        }\r\n        const firstTenBytes = new Uint8Array(this.arrayBuffer, 0, headerLength);\r\n        const version = firstTenBytes[3];\r\n        const tagSize = uint7ArrayToUint28([\r\n                firstTenBytes[6], firstTenBytes[7],\r\n                firstTenBytes[8], firstTenBytes[9]\r\n            ]) + headerLength;\r\n\r\n        if (!signatures.isId3v2(firstTenBytes) || version < 2 || version > 4) {\r\n            return;\r\n        }\r\n\r\n        this.arrayBuffer = this.arrayBuffer.slice(tagSize);\r\n    }\r\n\r\n    addTag() {\r\n        this.removeTag();\r\n\r\n        const BOM = [0xff, 0xfe];\r\n        const headerSize = 10;\r\n        const totalFrameSize = getTotalFrameSize(this.frames);\r\n        const totalTagSize = headerSize + totalFrameSize + this.padding;\r\n        const buffer = new ArrayBuffer(this.arrayBuffer.byteLength + totalTagSize);\r\n        const bufferWriter = new Uint8Array(buffer);\r\n\r\n        let offset = 0;\r\n        let writeBytes = [];\r\n\r\n        writeBytes = [0x49, 0x44, 0x33, 3]; // ID3 tag and version\r\n        bufferWriter.set(writeBytes, offset);\r\n        offset += writeBytes.length;\r\n\r\n        offset++; // version revision\r\n        offset++; // flags\r\n\r\n        writeBytes = uint28ToUint7Array(totalTagSize - headerSize); // tag size (without header)\r\n        bufferWriter.set(writeBytes, offset);\r\n        offset += writeBytes.length;\r\n\r\n        this.frames.forEach((frame) => {\r\n            writeBytes = encoder.encodeUtf8Ascii(frame.name); // frame name\r\n            bufferWriter.set(writeBytes, offset);\r\n            offset += writeBytes.length;\r\n\r\n            writeBytes = uint32ToUint8Array(frame.size - headerSize); // frame size (without header)\r\n            bufferWriter.set(writeBytes, offset);\r\n            offset += writeBytes.length;\r\n\r\n            offset += 2; // flags\r\n\r\n            switch (frame.name) {\r\n                case 'TPE1':\r\n                case 'TCOM':\r\n                case 'TCON':\r\n                case 'TIT2':\r\n                case 'TALB':\r\n                case 'TPE2':\r\n                case 'TRCK':\r\n                case 'TPOS':\r\n                case 'TPUB':\r\n                {\r\n                    writeBytes = [1].concat(BOM); // encoding, BOM\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n\r\n                    writeBytes = encoder.encodeUtf16le(frame.value); // frame value\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n                    break;\r\n                }\r\n                case 'USLT':\r\n                {\r\n                    const langEng = [101, 110, 103];\r\n\r\n                    writeBytes = [1].concat(langEng, BOM); // encoding, language, BOM for content descriptor\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n\r\n                    offset += 2; // content descriptor\r\n\r\n                    writeBytes = BOM; // BOM for frame value\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n\r\n                    writeBytes = encoder.encodeUtf16le(frame.value); // frame value\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n                    break;\r\n                }\r\n                case 'TLEN':\r\n                case 'TYER':\r\n                {\r\n                    offset++; // encoding\r\n\r\n                    writeBytes = encoder.encodeUtf8Ascii(frame.value); // frame value\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n                    break;\r\n                }\r\n                case 'APIC':\r\n                {\r\n                    offset++; // encoding\r\n\r\n                    writeBytes = encoder.encodeUtf8Ascii(frame.mimeType); // MIME type\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n\r\n                    writeBytes = [0, 3, 0]; // delemiter, pic type, delemiter\r\n                    bufferWriter.set(writeBytes, offset);\r\n                    offset += writeBytes.length;\r\n\r\n                    bufferWriter.set(new Uint8Array(frame.value), offset); // picture content\r\n                    offset += frame.value.byteLength;\r\n                    break;\r\n                }\r\n            }\r\n        });\r\n\r\n        offset += this.padding; // free space for rewriting\r\n        bufferWriter.set(new Uint8Array(this.arrayBuffer), offset);\r\n        this.arrayBuffer = buffer;\r\n        return buffer;\r\n    }\r\n\r\n    getBlob() {\r\n        return new Blob([this.arrayBuffer], {type: 'audio/mpeg'});\r\n    }\r\n\r\n    getURL() {\r\n        if (!this.url) {\r\n            this.url = URL.createObjectURL(this.getBlob());\r\n        }\r\n        return this.url;\r\n    }\r\n\r\n    revokeURL() {\r\n        URL.revokeObjectURL(this.url);\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Writer;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/browser-id3-writer.js\n **/","function encodeUtf8Ascii(str) {\r\n    const codePoints = String(str).split('').map((c) => {\r\n        const charCode = c.charCodeAt(0);\r\n        if (charCode > 0x7F) {\r\n            throw new Error('Trying to encode not ASCII symbol');\r\n        }\r\n        return charCode;\r\n    });\r\n\r\n    return new Uint8Array(codePoints);\r\n}\r\n\r\nfunction encodeUtf16le(str) {\r\n    const codePoints = String(str).split('').map((c) => c.charCodeAt(0));\r\n    const output = new Uint8Array(str.length * 2);\r\n\r\n    new Uint16Array(output.buffer).set(codePoints);\r\n\r\n    return output;\r\n}\r\n\r\nmodule.exports = {\r\n    encodeUtf8Ascii,\r\n    encodeUtf16le\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/encoder.js\n **/","function isId3v2(buf) {\r\n    return buf[0] === 0x49 && buf[1] === 0x44 && buf[2] === 0x33;\r\n}\r\n\r\nfunction getMimeType(buf) {\r\n    // https://github.com/sindresorhus/file-type\r\n    if (!buf || !buf.length) {\r\n        return null;\r\n    }\r\n    if (buf[0] === 0xff && buf[1] === 0xd8 && buf[2] === 0xff) {\r\n        return 'image/jpeg';\r\n    }\r\n    if (buf[0] === 0x89 && buf[1] === 0x50 && buf[2] === 0x4e && buf[3] === 0x47) {\r\n        return 'image/png';\r\n    }\r\n    if (buf[0] === 0x47 && buf[1] === 0x49 && buf[2] === 0x46) {\r\n        return 'image/gif';\r\n    }\r\n    if (buf[8] === 0x57 && buf[9] === 0x45 && buf[10] === 0x42 && buf[11] === 0x50) {\r\n        return 'image/webp';\r\n    }\r\n    const isLeTiff = buf[0] === 0x49 && buf[1] === 0x49 && buf[2] === 0x2a && buf[3] === 0;\r\n    const isBeTiff = buf[0] === 0x4d && buf[1] === 0x4d && buf[2] === 0 && buf[3] === 0x2a;\r\n\r\n    if (isLeTiff || isBeTiff) {\r\n        return 'image/tiff';\r\n    }\r\n    if (buf[0] === 0x42 && buf[1] === 0x4d) {\r\n        return 'image/bmp';\r\n    }\r\n    if (buf[0] === 0 && buf[1] === 0 && buf[2] === 1 && buf[3] === 0) {\r\n        return 'image/x-icon';\r\n    }\r\n    return null;\r\n}\r\n\r\nmodule.exports = {\r\n    isId3v2,\r\n    getMimeType\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/signatures.js\n **/"],"sourceRoot":""}